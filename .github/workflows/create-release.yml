# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Create Release

on:
  push:
    tags:
      - "*-ui"

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set output
        id: vars
        run: |
          echo ::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)
          echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3 | sed 's/.\{3\}$//')
      - name: Check output
        run: |
          echo ${{ steps.vars.outputs.tag }}
          echo ${{ steps.vars.outputs.version }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: ${{ steps.vars.outputs.tag }}
          body: test
          draft: true
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.vars.outputs.tag }}
      version: ${{ steps.vars.outputs.version }}

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        jdk: [ 8, 11, 17 ]
    runs-on: ${{ matrix.os }}
    needs: [release]
    env:
      JDK_VERSION: ${{ matrix.jdk }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Set up node using nvm
        uses: dcodeIO/setup-node-nvm@v4
        with:
          node-version: 8.12.0
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build
        run: ./gradlew jar shadowJar
      - name: Upload Release Asset
        id: upload-release-asset-java
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build/libs/wiremock-jre${{ matrix.jdk }}-standalone-${{ needs.create_release.outputs.version }}-all.jar
          asset_name: wiremock-jre${{ matrix.jdk }}-standalone-${{ needs.create_release.outputs.version }}.jar
          asset_content_type: application/java-archive